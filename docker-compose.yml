version: '3.8'

services:
  # SQL Server Database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: fm6-sqlserver
    environment:
      SA_PASSWORD: "YourStrong@Passw0rd"
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Express"
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
      - ./backend/src/main/resources/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - fm6-network

  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fm6-backend
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:sqlserver://sqlserver:1433;databaseName=membership_portal;encrypt=false;trustServerCertificate=true
      - SPRING_DATASOURCE_USERNAME=sa
      - SPRING_DATASOURCE_PASSWORD=YourStrong@Passw0rd
      - JWT_SECRET=mySecretKey
      - JWT_EXPIRATION=86400
    ports:
      - "8080:8080"
    depends_on:
      - sqlserver
    networks:
      - fm6-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: fm6-frontend
    ports:
      - "80:80"
    depends_on:
      - sqlserver
    networks:
      - fm6-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for Session Management (Optional)
  redis:
    image: redis:7-alpine
    container_name: fm6-redis
    ports:
      - "6379:6379"
    networks:
      - fm6-network
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

volumes:
  sqlserver_data:
  redis_data:

networks:
  fm6-network:
    driver: bridge